{
  "$id": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/config.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ORY Oathkeeper Configuration",
  "type": "object",
  "definitions": {
    "handlerSwitch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "title": "Enabled",
          "enum": [false, true],
          "default": false,
          "description": "En-/disables this component."
        }
      }
    },
    "scopeStrategy": {
      "title": "Scope Strategy",
      "type": "string",
      "enum": ["hierarchic", "exact", "wildcard", "none"],
      "default": "none",
      "description": "Sets the strategy validation algorithm."
    }
  },
  "properties": {
    "serve": {
      "title": "HTTP(s)",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "api": {
          "type": "object",
          "title": "HTTP REST API",
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "number",
              "default": 4456,
              "title": "Port",
              "description": "The port to listen on."
            },
            "host": {
              "type": "string",
              "default": "",
              "examples": ["localhost", "127.0.0.1"],
              "title": "Host",
              "description": "The network interface to listen on."
            },
            "cors": {
              "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/corsx/viper.schema.json#"
            },
            "tls": {
              "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/tlsx/viper.schema.json#"
            }
          }
        },
        "proxy": {
          "type": "object",
          "title": "HTTP Reverse Proxy",
          "additionalProperties": false,
          "properties": {
            "port": {
              "type": "number",
              "default": 4455,
              "title": "Port",
              "description": "The port to listen on."
            },
            "host": {
              "type": "string",
              "default": "",
              "examples": ["localhost", "127.0.0.1"],
              "title": "Host",
              "description": "The network interface to listen on. Leave empty to listen on all interfaces."
            },
            "timeout": {
              "title": "HTTP Timeouts",
              "description": "Control the reverse proxy's HTTP timeouts.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "read": {
                  "title": "HTTP Read Timeout",
                  "type": "string",
                  "default": "5s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": "The maximum duration for reading the entire request, including the body.",
                  "examples": ["5s", "5m", "5h"]
                },
                "write": {
                  "title": "HTTP Write Timeout",
                  "type": "string",
                  "default": "120s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": "The maximum duration before timing out writes of the response. Increase this parameter to prevent unexpected closing a client connection if an upstream request is responding slowly.",
                  "examples": ["5s", "5m", "5h"]
                },
                "idle": {
                  "title": "HTTP Idle Timeout",
                  "type": "string",
                  "default": "120s",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$",
                  "description": " The maximum amount of time to wait for any action of a request session, reading data or writing the response.",
                  "examples": ["5s", "5m", "5h"]
                }
              }
            },
            "cors": {
              "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/corsx/viper.schema.json#"
            },
            "tls": {
              "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/tlsx/viper.schema.json#"
            }
          }
        }
      }
    },
    "access_rules": {
      "title": "Access Rules",
      "description": "Configure access rules. All sub-keys support configuration reloading without restarting.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "repositories": {
          "title": "Repositories",
          "description": "Locations (list of URLs) where access rules should be fetched from on boot. It is expected that the documents at those locations return a JSON or YAML Array containing ORY Oathkeeper Access Rules:\n\n- If the URL Scheme is `file://`, the access rules (an array of access rules is expected) will be fetched from the local file system.\n- If the URL Scheme is `inline://`, the access rules (an array of access rules is expected) are expected to be a base64 encoded (with padding!) JSON/YAML string (base64_encode(`[{\"id\":\"foo-rule\",\"authenticators\":[....]}]`)).\n- If the URL Scheme is `http://` or `https://`, the access rules (an array of access rules is expected) will be fetched from the provided HTTP(s) location.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "examples": [
            "[\"file://path/to/rules.json\",\"inline://W3siaWQiOiJmb28tcnVsZSIsImF1dGhlbnRpY2F0b3JzIjpbXX1d\",\"https://path-to-my-rules/rules.json\"]"
          ]
        }
      }
    },
    "authenticators": {
      "title": "Authenticators",
      "type": "object",
      "description": "For more information on authenticators head over to: https://www.ory.sh/docs/oathkeeper/pipeline/authn",
      "additionalProperties": false,
      "properties": {
        "anonymous": {
          "title": "Anonymous",
          "description": "The [`anonymous` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#anonymous).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.anonymous.schema.json#"
          }
        },
        "noop": {
          "title": "No Operation (noop)",
          "description": "The [`noop` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#noop).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.noop.schema.json#"
          }
        },
        "unauthorized": {
          "title": "Unauthorized",
          "description": "The [`unauthorized` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#unauthorized).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.unauthorized.schema.json#"
          }
        },
        "cookie_session": {
          "title": "Cookie Session",
          "description": "The [`cookie_session` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#cookie_session).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.cookie_session.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "jwt": {
          "title": "JSON Web Token (jwt)",
          "description": "The [`jwt` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#jwt).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.jwt.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "oauth2_client_credentials": {
          "title": "OAuth 2.0 Client Credentials",
          "description": "The [`oauth2_client_credentials` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#oauth2_client_credentials).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.oauth2_client_credentials.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "oauth2_introspection": {
          "title": "OAuth 2.0 Token Introspection",
          "description": "The [`oauth2_introspection` authenticator](https://www.ory.sh/docs/oathkeeper/pipeline/authn#oauth2_introspection).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authenticators.oauth2_introspection.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "authorizers": {
      "title": "Authorizers",
      "type": "object",
      "description": "For more information on authorizers head over to: https://www.ory.sh/docs/oathkeeper/pipeline/authz",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "title": "Allow",
          "description": "The [`allow` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#allow).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authorizers.allow.schema.json#"
          }
        },
        "deny": {
          "title": "Deny",
          "description": "The [`deny` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#allow).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authorizers.deny.schema.json#"
          }
        },
        "keto_engine_acp_ory": {
          "title": "ORY Keto Access Control Policies Engine",
          "description": "The [`keto_engine_acp_ory` authorizer](https://www.ory.sh/docs/oathkeeper/pipeline/authz#keto_engine_acp_ory).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/authorizers.keto_engine_acp_ory.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "mutators": {
      "title": "Mutators",
      "type": "object",
      "description": "For more information on mutators head over to: https://www.ory.sh/docs/oathkeeper/pipeline/mutator",
      "additionalProperties": false,
      "properties": {
        "noop": {
          "title": "No Operation (noop)",
          "description": "The [`noop` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#noop).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/mutators.noop.schema.json#"
          }
        },
        "cookie": {
          "title": "HTTP Cookie",
          "description": "The [`cookie` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#cookie).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/mutators.cookie.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "header": {
          "title": "HTTP Header",
          "description": "The [`header` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#header).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/mutators.header.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "hydrator": {
          "title": "Hydrator",
          "description": "The [`hydrator` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#hydrator).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/mutators.hydrator.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        },
        "id_token": {
          "title": "ID Token (JSON Web Token)",
          "description": "The [`id_token` mutator](https://www.ory.sh/docs/oathkeeper/pipeline/mutator#id_token).",
          "enabled": {
            "$ref": "#/definitions/handlerSwitch"
          },
          "config": {
            "$ref": "https://raw.githubusercontent.com/ory/oathkeeper/master/.schemas/mutators.id_token.schema.json#"
          },
          "anyOf": [
            {
              "properties": {
                "enabled": {
                  "const": true
                }
              },
              "required": ["config"]
            },
            {
              "properties": {
                "enabled": {
                  "const": false
                }
              }
            }
          ]
        }
      }
    },
    "log": {
      "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/logrusx/viper.schema.json#"
    },
    "profiling": {
      "$ref": "https://raw.githubusercontent.com/ory/x/master/.schemas/profilingx/viper.schema.json#"
    }
  },
  "required": [],
  "additionalProperties": false
}
